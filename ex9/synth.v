/* Generated by Yosys 0.9 (git sha1 1979e0b1, i686-w64-mingw32.static-g++ 5.5.0 -Os) */

(* src = "ackor.v:2" *)
module ackor(ack0n, ack1n, ack2n, ack3n, ack);
  wire _0_;
  wire _1_;
  (* src = "ackor.v:2" *)
  output ack;
  (* src = "ackor.v:2" *)
  input ack0n;
  (* src = "ackor.v:2" *)
  input ack1n;
  (* src = "ackor.v:2" *)
  input ack2n;
  (* src = "ackor.v:2" *)
  input ack3n;
  assign _0_ = ack1n | ack0n;
  assign _1_ = _0_ | ack2n;
  assign ack = _1_ | ack3n;
endmodule

(* src = "arb.v:3" *)
module arb(req0, req1, req2, req3, ack0, ack1, ack2, ack3, clk, rst);
  (* src = "arb.v:12" *)
  wire _000_;
  (* src = "arb.v:12" *)
  wire _001_;
  (* src = "arb.v:12" *)
  wire _002_;
  (* src = "arb.v:12" *)
  wire _003_;
  (* src = "arb.v:12" *)
  wire [1:0] _004_;
  (* src = "arb.v:5" *)
  wire [1:0] _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  (* src = "arb.v:3" *)
  output ack0;
  (* src = "arb.v:3" *)
  output ack1;
  (* src = "arb.v:3" *)
  output ack2;
  (* src = "arb.v:3" *)
  output ack3;
  (* src = "arb.v:3" *)
  input clk;
  (* src = "arb.v:4" *)
  wire [1:0] next_pc;
  (* src = "arb.v:4" *)
  reg [1:0] pc;
  (* src = "arb.v:3" *)
  input req0;
  (* src = "arb.v:3" *)
  input req1;
  (* src = "arb.v:3" *)
  input req2;
  (* src = "arb.v:3" *)
  input req3;
  (* src = "arb.v:3" *)
  input rst;
  assign _006_ = ~rst;
  assign _004_[0] = ~((pc[1] | pc[0]) & _006_);
  assign _020_ = ~(pc[1] ^ pc[0]);
  assign _004_[1] = ~(_020_ | rst);
  assign _005_[0] = next_pc[0] & ~(rst);
  assign _005_[1] = next_pc[1] & ~(rst);
  assign _021_ = ~req0;
  assign _022_ = req1 | ~(req2);
  assign _023_ = _022_ | ~(_021_);
  assign _024_ = ~_023_;
  assign _025_ = pc[1] | pc[0];
  assign _026_ = pc[1] | ~(pc[0]);
  assign _027_ = pc[0] | ~(pc[1]);
  assign _028_ = ~_027_;
  assign _029_ = pc[1] & pc[0];
  assign _030_ = ~req3;
  assign _031_ = _023_ | ~(_030_);
  assign _032_ = _029_ & ~(_031_);
  assign _033_ = ~((_028_ & req2) | _032_);
  assign _034_ = ~((_022_ | _026_) & _033_);
  assign _002_ = _025_ ? _034_ : _024_;
  assign _035_ = ~req1;
  assign _036_ = req2 | ~(req3);
  assign _037_ = _036_ | ~(_035_);
  assign _038_ = _037_ | ~(_021_);
  assign _039_ = ~_038_;
  assign _040_ = ~_029_;
  assign _041_ = ~((_027_ | _036_) & (_040_ | _030_));
  assign _042_ = ~(_037_ | _026_);
  assign _043_ = _042_ | _041_;
  assign _003_ = _025_ ? _043_ : _039_;
  assign _044_ = req3 | ~(req0);
  assign _045_ = ~req2;
  assign _046_ = _044_ | ~(_045_);
  assign _047_ = ~((_044_ | _040_) & (_027_ | _046_));
  assign _048_ = _046_ | ~(_035_);
  assign _049_ = ~(_048_ | _026_);
  assign _050_ = _049_ | _047_;
  assign _000_ = _025_ ? _050_ : req0;
  assign _051_ = req0 | ~(req1);
  assign _052_ = ~_051_;
  assign _053_ = _051_ | ~(_030_);
  assign _054_ = ~(_053_ | _040_);
  assign _055_ = _053_ | ~(_045_);
  assign _056_ = ~(_055_ | _027_);
  assign _057_ = ~(_056_ | _054_);
  assign _058_ = ~((_026_ | _035_) & _057_);
  assign _001_ = _025_ ? _058_ : _052_;
  assign _059_ = ~(_025_ | _038_);
  assign _060_ = ~((_059_ & _006_) | req2);
  assign _061_ = _060_ | ~(_035_);
  assign _062_ = _061_ | ~(_021_);
  assign _063_ = ~(_062_ | _025_);
  assign _064_ = ~((_063_ & _006_) | req1);
  assign _065_ = _064_ | ~(_021_);
  assign _066_ = ~(_065_ | _025_);
  assign _067_ = ~((_066_ & _006_) | req0);
  assign _068_ = _067_ | _025_;
  assign _069_ = _068_ | ~(_006_);
  assign _070_ = ~((_049_ & _006_) | req3);
  assign _071_ = _070_ | ~(_045_);
  assign _072_ = _071_ | ~(_035_);
  assign _073_ = ~(_072_ | _026_);
  assign _074_ = ~((_073_ & _006_) | req2);
  assign _075_ = _074_ | ~(_035_);
  assign _076_ = ~(_075_ | _026_);
  assign _077_ = ~((_076_ & _006_) | req1);
  assign _078_ = _077_ | _026_;
  assign _079_ = _078_ | ~(_006_);
  assign _080_ = ~((_069_ | _025_) & (_026_ | _079_));
  assign _081_ = ~((_056_ & _006_) | req0);
  assign _082_ = _081_ | ~(_030_);
  assign _083_ = _082_ | ~(_045_);
  assign _084_ = ~(_083_ | _027_);
  assign _085_ = ~((_084_ & _006_) | req3);
  assign _086_ = _085_ | ~(_045_);
  assign _087_ = ~(_086_ | _027_);
  assign _088_ = ~((_087_ & _006_) | req2);
  assign _089_ = _088_ | ~(_028_);
  assign _008_ = _089_ | ~(_006_);
  assign _009_ = ~((_032_ & _006_) | req1);
  assign _010_ = _009_ | ~(_021_);
  assign _011_ = _010_ | ~(_030_);
  assign _012_ = ~(_011_ | _040_);
  assign _013_ = ~((_012_ & _006_) | req0);
  assign _014_ = _013_ | ~(_030_);
  assign _015_ = ~(_014_ | _040_);
  assign _016_ = ~((_015_ & _006_) | req3);
  assign _017_ = _016_ | ~(_029_);
  assign _018_ = _017_ | ~(_006_);
  assign _019_ = ~((_008_ | _027_) & (_040_ | _018_));
  assign _007_ = ~((_019_ | _080_) & _006_);
  (* src = "arb.v:5" *)
  always @(posedge clk)
      pc[0] <= _005_[0];
  (* src = "arb.v:5" *)
  always @(posedge clk)
      pc[1] <= _005_[1];
  (* src = "arb.v:12" *)
  \$_DLATCH_P_  _184_ (
    .D(_002_),
    .E(_006_),
    .Q(ack2)
  );
  (* src = "arb.v:12" *)
  \$_DLATCH_P_  _185_ (
    .D(_003_),
    .E(_006_),
    .Q(ack3)
  );
  (* src = "arb.v:12" *)
  \$_DLATCH_P_  _186_ (
    .D(_000_),
    .E(_006_),
    .Q(ack0)
  );
  (* src = "arb.v:12" *)
  \$_DLATCH_P_  _187_ (
    .D(_001_),
    .E(_006_),
    .Q(ack1)
  );
  (* src = "arb.v:12" *)
  \$_DLATCH_P_  _188_ (
    .D(_004_[0]),
    .E(_007_),
    .Q(next_pc[0])
  );
  (* src = "arb.v:12" *)
  \$_DLATCH_P_  _189_ (
    .D(_004_[1]),
    .E(_007_),
    .Q(next_pc[1])
  );
endmodule

(* src = "cb.v:2" *)
module cb(co0, co1, co2, co3, o0, o1, o2, o3, ack0, ack1, ack2, ack3);
  (* src = "cb.v:3" *)
  input [3:0] ack0;
  (* src = "cb.v:3" *)
  input [3:0] ack1;
  (* src = "cb.v:3" *)
  input [3:0] ack2;
  (* src = "cb.v:3" *)
  input [3:0] ack3;
  (* src = "cb.v:2" *)
  input [9:0] co0;
  (* src = "cb.v:2" *)
  input [9:0] co1;
  (* src = "cb.v:2" *)
  input [9:0] co2;
  (* src = "cb.v:2" *)
  input [9:0] co3;
  (* src = "cb.v:2" *)
  output [9:0] o0;
  (* src = "cb.v:2" *)
  output [9:0] o1;
  (* src = "cb.v:2" *)
  output [9:0] o2;
  (* src = "cb.v:2" *)
  output [9:0] o3;
  (* module_not_derived = 32'd1 *)
  (* src = "cb.v:4" *)
  cbsel cbsel0 (
    .ack(ack0),
    .i0(co0),
    .i1(co1),
    .i2(co2),
    .i3(co3),
    .o(o0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "cb.v:5" *)
  cbsel cbsel1 (
    .ack(ack1),
    .i0(co0),
    .i1(co1),
    .i2(co2),
    .i3(co3),
    .o(o1)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "cb.v:6" *)
  cbsel cbsel2 (
    .ack(ack2),
    .i0(co0),
    .i1(co1),
    .i2(co2),
    .i3(co3),
    .o(o2)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "cb.v:7" *)
  cbsel cbsel3 (
    .ack(ack3),
    .i0(co0),
    .i1(co1),
    .i2(co2),
    .i3(co3),
    .o(o3)
  );
endmodule

(* src = "cbsel.v:2" *)
module cbsel(i0, i1, i2, i3, o, ack);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  wire _37_;
  wire _38_;
  wire _39_;
  (* src = "cbsel.v:2" *)
  input [3:0] ack;
  (* src = "cbsel.v:2" *)
  input [9:0] i0;
  (* src = "cbsel.v:2" *)
  input [9:0] i1;
  (* src = "cbsel.v:2" *)
  input [9:0] i2;
  (* src = "cbsel.v:2" *)
  input [9:0] i3;
  (* src = "cbsel.v:2" *)
  output [9:0] o;
  assign _03_ = ack[1] & ~(ack[0]);
  assign _04_ = ack[3] | ack[2];
  assign _05_ = _04_ | ~(_03_);
  assign _06_ = ack[1] | ack[0];
  assign _07_ = ack[2] | ~(ack[3]);
  assign _08_ = ~(_07_ | _06_);
  assign _09_ = ack[3] | ~(ack[2]);
  assign _10_ = ~(_09_ | _06_);
  assign _11_ = _10_ | _08_;
  assign _12_ = _11_ | ~(_05_);
  assign _13_ = ~((_08_ & i3[0]) | (i2[0] & _10_));
  assign _14_ = _05_ | ~(i1[0]);
  assign _15_ = ~(_14_ & _13_);
  assign o[0] = _12_ ? _15_ : i0[0];
  assign _16_ = ~((_08_ & i3[1]) | (i2[1] & _10_));
  assign _17_ = _05_ | ~(i1[1]);
  assign _18_ = ~(_17_ & _16_);
  assign o[1] = _12_ ? _18_ : i0[1];
  assign _19_ = ~((_08_ & i3[2]) | (i2[2] & _10_));
  assign _20_ = _05_ | ~(i1[2]);
  assign _21_ = ~(_20_ & _19_);
  assign o[2] = _12_ ? _21_ : i0[2];
  assign _22_ = ~((_08_ & i3[3]) | (i2[3] & _10_));
  assign _23_ = _05_ | ~(i1[3]);
  assign _24_ = ~(_23_ & _22_);
  assign o[3] = _12_ ? _24_ : i0[3];
  assign _25_ = ~((_08_ & i3[4]) | (i2[4] & _10_));
  assign _26_ = _05_ | ~(i1[4]);
  assign _27_ = ~(_26_ & _25_);
  assign o[4] = _12_ ? _27_ : i0[4];
  assign _28_ = ~((_08_ & i3[5]) | (i2[5] & _10_));
  assign _29_ = _05_ | ~(i1[5]);
  assign _30_ = ~(_29_ & _28_);
  assign o[5] = _12_ ? _30_ : i0[5];
  assign _31_ = ~((_08_ & i3[6]) | (i2[6] & _10_));
  assign _32_ = _05_ | ~(i1[6]);
  assign _33_ = ~(_32_ & _31_);
  assign o[6] = _12_ ? _33_ : i0[6];
  assign _34_ = ~((_08_ & i3[7]) | (i2[7] & _10_));
  assign _35_ = _05_ | ~(i1[7]);
  assign _36_ = ~(_35_ & _34_);
  assign o[7] = _12_ ? _36_ : i0[7];
  assign _37_ = ~((_08_ & i3[8]) | (i2[8] & _10_));
  assign _38_ = _05_ | ~(i1[8]);
  assign _39_ = ~(_38_ & _37_);
  assign o[8] = _12_ ? _39_ : i0[8];
  assign _00_ = ~((_08_ & i3[9]) | (i2[9] & _10_));
  assign _01_ = _05_ | ~(i1[9]);
  assign _02_ = ~(_01_ & _00_);
  assign o[9] = _12_ ? _02_ : i0[9];
endmodule

(* src = "fifo.v:1" *)
module fifo(in, we, full, out, re, empty, clk, rst);
  (* src = "fifo.v:7" *)
  wire [3:0] _000_;
  (* src = "fifo.v:7" *)
  wire [3:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  (* src = "fifo.v:5" *)
  wire _162_;
  (* src = "fifo.v:5" *)
  wire _163_;
  (* src = "fifo.v:5" *)
  wire _164_;
  (* src = "fifo.v:5" *)
  wire _165_;
  (* src = "fifo.v:5" *)
  wire _166_;
  (* src = "fifo.v:5" *)
  wire _167_;
  (* src = "fifo.v:5" *)
  wire _168_;
  (* src = "fifo.v:5" *)
  wire _169_;
  (* src = "fifo.v:5" *)
  wire _170_;
  (* src = "fifo.v:5" *)
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire _274_;
  wire _275_;
  wire _276_;
  wire _277_;
  wire _278_;
  wire _279_;
  wire _280_;
  wire _281_;
  wire _282_;
  wire _283_;
  wire _284_;
  wire _285_;
  wire _286_;
  wire _287_;
  wire _288_;
  wire _289_;
  wire _290_;
  wire _291_;
  wire _292_;
  wire _293_;
  wire _294_;
  wire _295_;
  wire _296_;
  wire _297_;
  wire _298_;
  wire _299_;
  wire _300_;
  wire _301_;
  wire _302_;
  wire _303_;
  wire _304_;
  wire _305_;
  wire _306_;
  wire _307_;
  wire _308_;
  wire _309_;
  wire _310_;
  wire _311_;
  wire _312_;
  wire _313_;
  wire _314_;
  wire _315_;
  wire _316_;
  wire _317_;
  wire _318_;
  wire _319_;
  wire _320_;
  wire _321_;
  wire _322_;
  wire _323_;
  wire _324_;
  wire _325_;
  wire _326_;
  wire _327_;
  wire _328_;
  wire _329_;
  wire _330_;
  wire _331_;
  wire _332_;
  wire _333_;
  wire _334_;
  wire _335_;
  wire _336_;
  wire _337_;
  wire _338_;
  wire _339_;
  wire _340_;
  wire _341_;
  wire _342_;
  wire _343_;
  wire _344_;
  wire _345_;
  wire _346_;
  wire _347_;
  wire _348_;
  wire _349_;
  wire _350_;
  wire _351_;
  wire _352_;
  wire _353_;
  wire _354_;
  wire _355_;
  wire _356_;
  wire _357_;
  wire _358_;
  wire _359_;
  wire _360_;
  wire _361_;
  wire _362_;
  wire _363_;
  wire _364_;
  wire _365_;
  wire _366_;
  wire _367_;
  wire _368_;
  wire _369_;
  wire _370_;
  wire _371_;
  wire _372_;
  wire _373_;
  wire _374_;
  wire _375_;
  wire _376_;
  wire _377_;
  wire _378_;
  wire _379_;
  wire _380_;
  wire _381_;
  wire _382_;
  wire _383_;
  wire _384_;
  wire _385_;
  wire _386_;
  wire _387_;
  wire _388_;
  wire _389_;
  wire _390_;
  wire _391_;
  wire _392_;
  wire _393_;
  (* src = "fifo.v:2" *)
  input clk;
  (* src = "fifo.v:2" *)
  output empty;
  (* src = "fifo.v:1" *)
  output full;
  (* src = "fifo.v:3" *)
  reg [3:0] head;
  (* src = "fifo.v:1" *)
  input [9:0] in;
  reg [9:0] \mem[0] ;
  reg [9:0] \mem[10] ;
  reg [9:0] \mem[11] ;
  reg [9:0] \mem[12] ;
  reg [9:0] \mem[13] ;
  reg [9:0] \mem[14] ;
  reg [9:0] \mem[15] ;
  reg [9:0] \mem[1] ;
  reg [9:0] \mem[2] ;
  reg [9:0] \mem[3] ;
  reg [9:0] \mem[4] ;
  reg [9:0] \mem[5] ;
  reg [9:0] \mem[6] ;
  reg [9:0] \mem[7] ;
  reg [9:0] \mem[8] ;
  reg [9:0] \mem[9] ;
  (* src = "fifo.v:2" *)
  output [9:0] out;
  (* src = "fifo.v:2" *)
  input re;
  (* src = "fifo.v:2" *)
  input rst;
  (* src = "fifo.v:3" *)
  reg [3:0] tail;
  (* src = "fifo.v:1" *)
  input we;
  assign _172_ = head[0] ^ tail[0];
  assign _173_ = head[1] ^ tail[1];
  assign _174_ = _173_ | _172_;
  assign _175_ = ~(head[2] ^ tail[2]);
  assign _176_ = head[3] ^ tail[3];
  assign _177_ = _176_ | ~(_175_);
  assign empty = ~(_177_ | _174_);
  assign _178_ = head[0] & ~(head[1]);
  assign _179_ = head[1] & ~(head[0]);
  assign _180_ = ~(_179_ | _178_);
  assign _181_ = ~(_180_ ^ tail[1]);
  assign _182_ = _181_ | ~(_172_);
  assign _183_ = ~tail[2];
  assign _184_ = head[1] & head[0];
  assign _185_ = ~(_184_ ^ head[2]);
  assign _186_ = ~(_185_ ^ _183_);
  assign _187_ = ~head[2];
  assign _188_ = _184_ & ~(_187_);
  assign _189_ = ~(_188_ ^ head[3]);
  assign _190_ = ~(_189_ ^ tail[3]);
  assign _191_ = _190_ | ~(_186_);
  assign full = ~(_191_ | _182_);
  assign _192_ = tail[0] ? \mem[1] [0] : \mem[0] [0];
  assign _193_ = tail[0] ? \mem[3] [0] : \mem[2] [0];
  assign _194_ = tail[1] ? _193_ : _192_;
  assign _195_ = tail[0] ? \mem[5] [0] : \mem[4] [0];
  assign _196_ = tail[0] ? \mem[7] [0] : \mem[6] [0];
  assign _197_ = tail[1] ? _196_ : _195_;
  assign _198_ = tail[2] ? _197_ : _194_;
  assign _199_ = tail[0] ? \mem[9] [0] : \mem[8] [0];
  assign _200_ = tail[0] ? \mem[11] [0] : \mem[10] [0];
  assign _201_ = tail[1] ? _200_ : _199_;
  assign _202_ = tail[0] ? \mem[13] [0] : \mem[12] [0];
  assign _203_ = tail[0] ? \mem[15] [0] : \mem[14] [0];
  assign _204_ = tail[1] ? _203_ : _202_;
  assign _205_ = tail[2] ? _204_ : _201_;
  assign _162_ = tail[3] ? _205_ : _198_;
  assign _206_ = tail[0] ? \mem[1] [1] : \mem[0] [1];
  assign _207_ = tail[0] ? \mem[3] [1] : \mem[2] [1];
  assign _208_ = tail[1] ? _207_ : _206_;
  assign _209_ = tail[0] ? \mem[5] [1] : \mem[4] [1];
  assign _210_ = tail[0] ? \mem[7] [1] : \mem[6] [1];
  assign _211_ = tail[1] ? _210_ : _209_;
  assign _212_ = tail[2] ? _211_ : _208_;
  assign _213_ = tail[0] ? \mem[9] [1] : \mem[8] [1];
  assign _214_ = tail[0] ? \mem[11] [1] : \mem[10] [1];
  assign _215_ = tail[1] ? _214_ : _213_;
  assign _216_ = tail[0] ? \mem[13] [1] : \mem[12] [1];
  assign _217_ = tail[0] ? \mem[15] [1] : \mem[14] [1];
  assign _218_ = tail[1] ? _217_ : _216_;
  assign _219_ = tail[2] ? _218_ : _215_;
  assign _163_ = tail[3] ? _219_ : _212_;
  assign _220_ = tail[0] ? \mem[1] [2] : \mem[0] [2];
  assign _221_ = tail[0] ? \mem[3] [2] : \mem[2] [2];
  assign _222_ = tail[1] ? _221_ : _220_;
  assign _223_ = tail[0] ? \mem[5] [2] : \mem[4] [2];
  assign _224_ = tail[0] ? \mem[7] [2] : \mem[6] [2];
  assign _225_ = tail[1] ? _224_ : _223_;
  assign _226_ = tail[2] ? _225_ : _222_;
  assign _227_ = tail[0] ? \mem[9] [2] : \mem[8] [2];
  assign _228_ = tail[0] ? \mem[11] [2] : \mem[10] [2];
  assign _229_ = tail[1] ? _228_ : _227_;
  assign _230_ = tail[0] ? \mem[13] [2] : \mem[12] [2];
  assign _231_ = tail[0] ? \mem[15] [2] : \mem[14] [2];
  assign _232_ = tail[1] ? _231_ : _230_;
  assign _233_ = tail[2] ? _232_ : _229_;
  assign _164_ = tail[3] ? _233_ : _226_;
  assign _234_ = tail[0] ? \mem[1] [3] : \mem[0] [3];
  assign _235_ = tail[0] ? \mem[3] [3] : \mem[2] [3];
  assign _236_ = tail[1] ? _235_ : _234_;
  assign _237_ = tail[0] ? \mem[5] [3] : \mem[4] [3];
  assign _238_ = tail[0] ? \mem[7] [3] : \mem[6] [3];
  assign _239_ = tail[1] ? _238_ : _237_;
  assign _240_ = tail[2] ? _239_ : _236_;
  assign _241_ = tail[0] ? \mem[9] [3] : \mem[8] [3];
  assign _242_ = tail[0] ? \mem[11] [3] : \mem[10] [3];
  assign _243_ = tail[1] ? _242_ : _241_;
  assign _244_ = tail[0] ? \mem[13] [3] : \mem[12] [3];
  assign _245_ = tail[0] ? \mem[15] [3] : \mem[14] [3];
  assign _246_ = tail[1] ? _245_ : _244_;
  assign _247_ = tail[2] ? _246_ : _243_;
  assign _165_ = tail[3] ? _247_ : _240_;
  assign _248_ = tail[0] ? \mem[1] [4] : \mem[0] [4];
  assign _249_ = tail[0] ? \mem[3] [4] : \mem[2] [4];
  assign _250_ = tail[1] ? _249_ : _248_;
  assign _251_ = tail[0] ? \mem[5] [4] : \mem[4] [4];
  assign _252_ = tail[0] ? \mem[7] [4] : \mem[6] [4];
  assign _253_ = tail[1] ? _252_ : _251_;
  assign _254_ = tail[2] ? _253_ : _250_;
  assign _255_ = tail[0] ? \mem[9] [4] : \mem[8] [4];
  assign _256_ = tail[0] ? \mem[11] [4] : \mem[10] [4];
  assign _257_ = tail[1] ? _256_ : _255_;
  assign _258_ = tail[0] ? \mem[13] [4] : \mem[12] [4];
  assign _259_ = tail[0] ? \mem[15] [4] : \mem[14] [4];
  assign _260_ = tail[1] ? _259_ : _258_;
  assign _261_ = tail[2] ? _260_ : _257_;
  assign _166_ = tail[3] ? _261_ : _254_;
  assign _262_ = tail[0] ? \mem[1] [5] : \mem[0] [5];
  assign _263_ = tail[0] ? \mem[3] [5] : \mem[2] [5];
  assign _264_ = tail[1] ? _263_ : _262_;
  assign _265_ = tail[0] ? \mem[5] [5] : \mem[4] [5];
  assign _266_ = tail[0] ? \mem[7] [5] : \mem[6] [5];
  assign _267_ = tail[1] ? _266_ : _265_;
  assign _268_ = tail[2] ? _267_ : _264_;
  assign _269_ = tail[0] ? \mem[9] [5] : \mem[8] [5];
  assign _270_ = tail[0] ? \mem[11] [5] : \mem[10] [5];
  assign _271_ = tail[1] ? _270_ : _269_;
  assign _272_ = tail[0] ? \mem[13] [5] : \mem[12] [5];
  assign _273_ = tail[0] ? \mem[15] [5] : \mem[14] [5];
  assign _274_ = tail[1] ? _273_ : _272_;
  assign _275_ = tail[2] ? _274_ : _271_;
  assign _167_ = tail[3] ? _275_ : _268_;
  assign _276_ = tail[0] ? \mem[1] [6] : \mem[0] [6];
  assign _277_ = tail[0] ? \mem[3] [6] : \mem[2] [6];
  assign _278_ = tail[1] ? _277_ : _276_;
  assign _279_ = tail[0] ? \mem[5] [6] : \mem[4] [6];
  assign _280_ = tail[0] ? \mem[7] [6] : \mem[6] [6];
  assign _281_ = tail[1] ? _280_ : _279_;
  assign _282_ = tail[2] ? _281_ : _278_;
  assign _283_ = tail[0] ? \mem[9] [6] : \mem[8] [6];
  assign _284_ = tail[0] ? \mem[11] [6] : \mem[10] [6];
  assign _285_ = tail[1] ? _284_ : _283_;
  assign _286_ = tail[0] ? \mem[13] [6] : \mem[12] [6];
  assign _287_ = tail[0] ? \mem[15] [6] : \mem[14] [6];
  assign _288_ = tail[1] ? _287_ : _286_;
  assign _289_ = tail[2] ? _288_ : _285_;
  assign _168_ = tail[3] ? _289_ : _282_;
  assign _290_ = tail[0] ? \mem[1] [7] : \mem[0] [7];
  assign _291_ = tail[0] ? \mem[3] [7] : \mem[2] [7];
  assign _292_ = tail[1] ? _291_ : _290_;
  assign _293_ = tail[0] ? \mem[5] [7] : \mem[4] [7];
  assign _294_ = tail[0] ? \mem[7] [7] : \mem[6] [7];
  assign _295_ = tail[1] ? _294_ : _293_;
  assign _296_ = tail[2] ? _295_ : _292_;
  assign _297_ = tail[0] ? \mem[9] [7] : \mem[8] [7];
  assign _298_ = tail[0] ? \mem[11] [7] : \mem[10] [7];
  assign _299_ = tail[1] ? _298_ : _297_;
  assign _300_ = tail[0] ? \mem[13] [7] : \mem[12] [7];
  assign _301_ = tail[0] ? \mem[15] [7] : \mem[14] [7];
  assign _302_ = tail[1] ? _301_ : _300_;
  assign _303_ = tail[2] ? _302_ : _299_;
  assign _169_ = tail[3] ? _303_ : _296_;
  assign _304_ = tail[0] ? \mem[1] [8] : \mem[0] [8];
  assign _305_ = tail[0] ? \mem[3] [8] : \mem[2] [8];
  assign _306_ = tail[1] ? _305_ : _304_;
  assign _307_ = tail[0] ? \mem[5] [8] : \mem[4] [8];
  assign _308_ = tail[0] ? \mem[7] [8] : \mem[6] [8];
  assign _309_ = tail[1] ? _308_ : _307_;
  assign _310_ = tail[2] ? _309_ : _306_;
  assign _311_ = tail[0] ? \mem[9] [8] : \mem[8] [8];
  assign _312_ = tail[0] ? \mem[11] [8] : \mem[10] [8];
  assign _313_ = tail[1] ? _312_ : _311_;
  assign _314_ = tail[0] ? \mem[13] [8] : \mem[12] [8];
  assign _315_ = tail[0] ? \mem[15] [8] : \mem[14] [8];
  assign _316_ = tail[1] ? _315_ : _314_;
  assign _317_ = tail[2] ? _316_ : _313_;
  assign _170_ = tail[3] ? _317_ : _310_;
  assign _318_ = tail[0] ? \mem[1] [9] : \mem[0] [9];
  assign _319_ = tail[0] ? \mem[3] [9] : \mem[2] [9];
  assign _320_ = tail[1] ? _319_ : _318_;
  assign _321_ = tail[0] ? \mem[5] [9] : \mem[4] [9];
  assign _322_ = tail[0] ? \mem[7] [9] : \mem[6] [9];
  assign _323_ = tail[1] ? _322_ : _321_;
  assign _324_ = tail[2] ? _323_ : _320_;
  assign _325_ = tail[0] ? \mem[9] [9] : \mem[8] [9];
  assign _326_ = tail[0] ? \mem[11] [9] : \mem[10] [9];
  assign _327_ = tail[1] ? _326_ : _325_;
  assign _328_ = tail[0] ? \mem[13] [9] : \mem[12] [9];
  assign _329_ = tail[0] ? \mem[15] [9] : \mem[14] [9];
  assign _330_ = tail[1] ? _329_ : _328_;
  assign _331_ = tail[2] ? _330_ : _327_;
  assign _171_ = tail[3] ? _331_ : _324_;
  assign _332_ = ~(head[0] ^ we);
  assign _000_[0] = ~(_332_ | rst);
  assign _333_ = ~head[1];
  assign _334_ = we ? _180_ : _333_;
  assign _000_[1] = ~(_334_ | rst);
  assign _335_ = we ? _185_ : _187_;
  assign _000_[2] = ~(_335_ | rst);
  assign _336_ = ~head[3];
  assign _337_ = we ? _189_ : _336_;
  assign _000_[3] = ~(_337_ | rst);
  assign _338_ = ~tail[0];
  assign _339_ = ~(empty ^ _338_);
  assign _340_ = re ? _339_ : _338_;
  assign _001_[0] = ~(_340_ | rst);
  assign _341_ = ~tail[1];
  assign _342_ = _177_ | _174_;
  assign _343_ = ~(tail[0] ^ tail[1]);
  assign _344_ = _342_ ? _343_ : _341_;
  assign _345_ = re ? _344_ : _341_;
  assign _001_[1] = ~(_345_ | rst);
  assign _346_ = ~(tail[0] & tail[1]);
  assign _347_ = ~(_346_ ^ _183_);
  assign _348_ = _342_ ? _347_ : _183_;
  assign _349_ = re ? _348_ : _183_;
  assign _001_[2] = ~(_349_ | rst);
  assign _350_ = ~tail[3];
  assign _351_ = ~(_346_ | _183_);
  assign _352_ = ~(_351_ ^ tail[3]);
  assign _353_ = _342_ ? _352_ : _350_;
  assign _354_ = re ? _353_ : _350_;
  assign _001_[3] = ~(_354_ | rst);
  assign _355_ = ~(head[3] & head[2]);
  assign _356_ = _355_ | ~(_178_);
  assign _357_ = we & ~(rst);
  assign _358_ = ~_357_;
  assign _359_ = ~(_358_ | _356_);
  assign _042_ = _359_ ? in[0] : \mem[13] [0];
  assign _043_ = _359_ ? in[1] : \mem[13] [1];
  assign _044_ = _359_ ? in[2] : \mem[13] [2];
  assign _045_ = _359_ ? in[3] : \mem[13] [3];
  assign _046_ = _359_ ? in[4] : \mem[13] [4];
  assign _047_ = _359_ ? in[5] : \mem[13] [5];
  assign _048_ = _359_ ? in[6] : \mem[13] [6];
  assign _049_ = _359_ ? in[7] : \mem[13] [7];
  assign _050_ = _359_ ? in[8] : \mem[13] [8];
  assign _051_ = _359_ ? in[9] : \mem[13] [9];
  assign _360_ = ~(head[1] | head[0]);
  assign _361_ = head[2] | ~(head[3]);
  assign _362_ = _361_ | ~(_360_);
  assign _363_ = _362_ | ~(_357_);
  assign _142_ = _363_ ? \mem[8] [0] : in[0];
  assign _143_ = _363_ ? \mem[8] [1] : in[1];
  assign _144_ = _363_ ? \mem[8] [2] : in[2];
  assign _145_ = _363_ ? \mem[8] [3] : in[3];
  assign _146_ = _363_ ? \mem[8] [4] : in[4];
  assign _147_ = _363_ ? \mem[8] [5] : in[5];
  assign _148_ = _363_ ? \mem[8] [6] : in[6];
  assign _149_ = _363_ ? \mem[8] [7] : in[7];
  assign _150_ = _363_ ? \mem[8] [8] : in[8];
  assign _151_ = _363_ ? \mem[8] [9] : in[9];
  assign _364_ = head[3] | head[2];
  assign _365_ = _364_ | ~(_179_);
  assign _366_ = _365_ | ~(_357_);
  assign _082_ = _366_ ? \mem[2] [0] : in[0];
  assign _083_ = _366_ ? \mem[2] [1] : in[1];
  assign _084_ = _366_ ? \mem[2] [2] : in[2];
  assign _085_ = _366_ ? \mem[2] [3] : in[3];
  assign _086_ = _366_ ? \mem[2] [4] : in[4];
  assign _087_ = _366_ ? \mem[2] [5] : in[5];
  assign _088_ = _366_ ? \mem[2] [6] : in[6];
  assign _089_ = _366_ ? \mem[2] [7] : in[7];
  assign _090_ = _366_ ? \mem[2] [8] : in[8];
  assign _091_ = _366_ ? \mem[2] [9] : in[9];
  assign _367_ = _355_ | ~(_360_);
  assign _368_ = _367_ | ~(_357_);
  assign _032_ = _368_ ? \mem[12] [0] : in[0];
  assign _033_ = _368_ ? \mem[12] [1] : in[1];
  assign _034_ = _368_ ? \mem[12] [2] : in[2];
  assign _035_ = _368_ ? \mem[12] [3] : in[3];
  assign _036_ = _368_ ? \mem[12] [4] : in[4];
  assign _037_ = _368_ ? \mem[12] [5] : in[5];
  assign _038_ = _368_ ? \mem[12] [6] : in[6];
  assign _039_ = _368_ ? \mem[12] [7] : in[7];
  assign _040_ = _368_ ? \mem[12] [8] : in[8];
  assign _041_ = _368_ ? \mem[12] [9] : in[9];
  assign _369_ = head[3] | ~(head[2]);
  assign _370_ = _369_ | ~(_184_);
  assign _371_ = _370_ | ~(_357_);
  assign _132_ = _371_ ? \mem[7] [0] : in[0];
  assign _133_ = _371_ ? \mem[7] [1] : in[1];
  assign _134_ = _371_ ? \mem[7] [2] : in[2];
  assign _135_ = _371_ ? \mem[7] [3] : in[3];
  assign _136_ = _371_ ? \mem[7] [4] : in[4];
  assign _137_ = _371_ ? \mem[7] [5] : in[5];
  assign _138_ = _371_ ? \mem[7] [6] : in[6];
  assign _139_ = _371_ ? \mem[7] [7] : in[7];
  assign _140_ = _371_ ? \mem[7] [8] : in[8];
  assign _141_ = _371_ ? \mem[7] [9] : in[9];
  assign _372_ = _369_ | ~(_179_);
  assign _373_ = _372_ | ~(_357_);
  assign _122_ = _373_ ? \mem[6] [0] : in[0];
  assign _123_ = _373_ ? \mem[6] [1] : in[1];
  assign _124_ = _373_ ? \mem[6] [2] : in[2];
  assign _125_ = _373_ ? \mem[6] [3] : in[3];
  assign _126_ = _373_ ? \mem[6] [4] : in[4];
  assign _127_ = _373_ ? \mem[6] [5] : in[5];
  assign _128_ = _373_ ? \mem[6] [6] : in[6];
  assign _129_ = _373_ ? \mem[6] [7] : in[7];
  assign _130_ = _373_ ? \mem[6] [8] : in[8];
  assign _131_ = _373_ ? \mem[6] [9] : in[9];
  assign _374_ = _364_ | ~(_184_);
  assign _375_ = _374_ | ~(_357_);
  assign _092_ = _375_ ? \mem[3] [0] : in[0];
  assign _093_ = _375_ ? \mem[3] [1] : in[1];
  assign _094_ = _375_ ? \mem[3] [2] : in[2];
  assign _095_ = _375_ ? \mem[3] [3] : in[3];
  assign _096_ = _375_ ? \mem[3] [4] : in[4];
  assign _097_ = _375_ ? \mem[3] [5] : in[5];
  assign _098_ = _375_ ? \mem[3] [6] : in[6];
  assign _099_ = _375_ ? \mem[3] [7] : in[7];
  assign _100_ = _375_ ? \mem[3] [8] : in[8];
  assign _101_ = _375_ ? \mem[3] [9] : in[9];
  assign _376_ = _361_ | ~(_184_);
  assign _377_ = _376_ | ~(_357_);
  assign _022_ = _377_ ? \mem[11] [0] : in[0];
  assign _023_ = _377_ ? \mem[11] [1] : in[1];
  assign _024_ = _377_ ? \mem[11] [2] : in[2];
  assign _025_ = _377_ ? \mem[11] [3] : in[3];
  assign _026_ = _377_ ? \mem[11] [4] : in[4];
  assign _027_ = _377_ ? \mem[11] [5] : in[5];
  assign _028_ = _377_ ? \mem[11] [6] : in[6];
  assign _029_ = _377_ ? \mem[11] [7] : in[7];
  assign _030_ = _377_ ? \mem[11] [8] : in[8];
  assign _031_ = _377_ ? \mem[11] [9] : in[9];
  assign _378_ = _361_ | ~(_179_);
  assign _379_ = _378_ | ~(_357_);
  assign _012_ = _379_ ? \mem[10] [0] : in[0];
  assign _013_ = _379_ ? \mem[10] [1] : in[1];
  assign _014_ = _379_ ? \mem[10] [2] : in[2];
  assign _015_ = _379_ ? \mem[10] [3] : in[3];
  assign _016_ = _379_ ? \mem[10] [4] : in[4];
  assign _017_ = _379_ ? \mem[10] [5] : in[5];
  assign _018_ = _379_ ? \mem[10] [6] : in[6];
  assign _019_ = _379_ ? \mem[10] [7] : in[7];
  assign _020_ = _379_ ? \mem[10] [8] : in[8];
  assign _021_ = _379_ ? \mem[10] [9] : in[9];
  assign _380_ = _369_ | ~(_360_);
  assign _381_ = _380_ | ~(_357_);
  assign _102_ = _381_ ? \mem[4] [0] : in[0];
  assign _103_ = _381_ ? \mem[4] [1] : in[1];
  assign _104_ = _381_ ? \mem[4] [2] : in[2];
  assign _105_ = _381_ ? \mem[4] [3] : in[3];
  assign _106_ = _381_ ? \mem[4] [4] : in[4];
  assign _107_ = _381_ ? \mem[4] [5] : in[5];
  assign _108_ = _381_ ? \mem[4] [6] : in[6];
  assign _109_ = _381_ ? \mem[4] [7] : in[7];
  assign _110_ = _381_ ? \mem[4] [8] : in[8];
  assign _111_ = _381_ ? \mem[4] [9] : in[9];
  assign _382_ = _361_ | ~(_178_);
  assign _383_ = _382_ | ~(_357_);
  assign _152_ = _383_ ? \mem[9] [0] : in[0];
  assign _153_ = _383_ ? \mem[9] [1] : in[1];
  assign _154_ = _383_ ? \mem[9] [2] : in[2];
  assign _155_ = _383_ ? \mem[9] [3] : in[3];
  assign _156_ = _383_ ? \mem[9] [4] : in[4];
  assign _157_ = _383_ ? \mem[9] [5] : in[5];
  assign _158_ = _383_ ? \mem[9] [6] : in[6];
  assign _159_ = _383_ ? \mem[9] [7] : in[7];
  assign _160_ = _383_ ? \mem[9] [8] : in[8];
  assign _161_ = _383_ ? \mem[9] [9] : in[9];
  assign _384_ = _369_ | ~(_178_);
  assign _385_ = _384_ | ~(_357_);
  assign _112_ = _385_ ? \mem[5] [0] : in[0];
  assign _113_ = _385_ ? \mem[5] [1] : in[1];
  assign _114_ = _385_ ? \mem[5] [2] : in[2];
  assign _115_ = _385_ ? \mem[5] [3] : in[3];
  assign _116_ = _385_ ? \mem[5] [4] : in[4];
  assign _117_ = _385_ ? \mem[5] [5] : in[5];
  assign _118_ = _385_ ? \mem[5] [6] : in[6];
  assign _119_ = _385_ ? \mem[5] [7] : in[7];
  assign _120_ = _385_ ? \mem[5] [8] : in[8];
  assign _121_ = _385_ ? \mem[5] [9] : in[9];
  assign _386_ = _364_ | ~(_360_);
  assign _387_ = ~(_386_ | _358_);
  assign _002_ = _387_ ? in[0] : \mem[0] [0];
  assign _003_ = _387_ ? in[1] : \mem[0] [1];
  assign _004_ = _387_ ? in[2] : \mem[0] [2];
  assign _005_ = _387_ ? in[3] : \mem[0] [3];
  assign _006_ = _387_ ? in[4] : \mem[0] [4];
  assign _007_ = _387_ ? in[5] : \mem[0] [5];
  assign _008_ = _387_ ? in[6] : \mem[0] [6];
  assign _009_ = _387_ ? in[7] : \mem[0] [7];
  assign _010_ = _387_ ? in[8] : \mem[0] [8];
  assign _011_ = _387_ ? in[9] : \mem[0] [9];
  assign _388_ = _355_ | ~(_184_);
  assign _389_ = _388_ | ~(_357_);
  assign _062_ = _389_ ? \mem[15] [0] : in[0];
  assign _063_ = _389_ ? \mem[15] [1] : in[1];
  assign _064_ = _389_ ? \mem[15] [2] : in[2];
  assign _065_ = _389_ ? \mem[15] [3] : in[3];
  assign _066_ = _389_ ? \mem[15] [4] : in[4];
  assign _067_ = _389_ ? \mem[15] [5] : in[5];
  assign _068_ = _389_ ? \mem[15] [6] : in[6];
  assign _069_ = _389_ ? \mem[15] [7] : in[7];
  assign _070_ = _389_ ? \mem[15] [8] : in[8];
  assign _071_ = _389_ ? \mem[15] [9] : in[9];
  assign _390_ = _364_ | ~(_178_);
  assign _391_ = ~(_390_ | _358_);
  assign _072_ = _391_ ? in[0] : \mem[1] [0];
  assign _073_ = _391_ ? in[1] : \mem[1] [1];
  assign _074_ = _391_ ? in[2] : \mem[1] [2];
  assign _075_ = _391_ ? in[3] : \mem[1] [3];
  assign _076_ = _391_ ? in[4] : \mem[1] [4];
  assign _077_ = _391_ ? in[5] : \mem[1] [5];
  assign _078_ = _391_ ? in[6] : \mem[1] [6];
  assign _079_ = _391_ ? in[7] : \mem[1] [7];
  assign _080_ = _391_ ? in[8] : \mem[1] [8];
  assign _081_ = _391_ ? in[9] : \mem[1] [9];
  assign _392_ = _355_ | ~(_179_);
  assign _393_ = _392_ | ~(_357_);
  assign _052_ = _393_ ? \mem[14] [0] : in[0];
  assign _053_ = _393_ ? \mem[14] [1] : in[1];
  assign _054_ = _393_ ? \mem[14] [2] : in[2];
  assign _055_ = _393_ ? \mem[14] [3] : in[3];
  assign _056_ = _393_ ? \mem[14] [4] : in[4];
  assign _057_ = _393_ ? \mem[14] [5] : in[5];
  assign _058_ = _393_ ? \mem[14] [6] : in[6];
  assign _059_ = _393_ ? \mem[14] [7] : in[7];
  assign _060_ = _393_ ? \mem[14] [8] : in[8];
  assign _061_ = _393_ ? \mem[14] [9] : in[9];
  always @(posedge clk)
      \mem[13] [0] <= _042_;
  always @(posedge clk)
      \mem[13] [1] <= _043_;
  always @(posedge clk)
      \mem[13] [2] <= _044_;
  always @(posedge clk)
      \mem[13] [3] <= _045_;
  always @(posedge clk)
      \mem[13] [4] <= _046_;
  always @(posedge clk)
      \mem[13] [5] <= _047_;
  always @(posedge clk)
      \mem[13] [6] <= _048_;
  always @(posedge clk)
      \mem[13] [7] <= _049_;
  always @(posedge clk)
      \mem[13] [8] <= _050_;
  always @(posedge clk)
      \mem[13] [9] <= _051_;
  always @(posedge clk)
      \mem[4] [0] <= _102_;
  always @(posedge clk)
      \mem[4] [1] <= _103_;
  always @(posedge clk)
      \mem[4] [2] <= _104_;
  always @(posedge clk)
      \mem[4] [3] <= _105_;
  always @(posedge clk)
      \mem[4] [4] <= _106_;
  always @(posedge clk)
      \mem[4] [5] <= _107_;
  always @(posedge clk)
      \mem[4] [6] <= _108_;
  always @(posedge clk)
      \mem[4] [7] <= _109_;
  always @(posedge clk)
      \mem[4] [8] <= _110_;
  always @(posedge clk)
      \mem[4] [9] <= _111_;
  always @(posedge clk)
      tail[0] <= _001_[0];
  always @(posedge clk)
      tail[1] <= _001_[1];
  always @(posedge clk)
      tail[2] <= _001_[2];
  always @(posedge clk)
      tail[3] <= _001_[3];
  always @(posedge clk)
      \mem[5] [0] <= _112_;
  always @(posedge clk)
      \mem[5] [1] <= _113_;
  always @(posedge clk)
      \mem[5] [2] <= _114_;
  always @(posedge clk)
      \mem[5] [3] <= _115_;
  always @(posedge clk)
      \mem[5] [4] <= _116_;
  always @(posedge clk)
      \mem[5] [5] <= _117_;
  always @(posedge clk)
      \mem[5] [6] <= _118_;
  always @(posedge clk)
      \mem[5] [7] <= _119_;
  always @(posedge clk)
      \mem[5] [8] <= _120_;
  always @(posedge clk)
      \mem[5] [9] <= _121_;
  always @(posedge clk)
      \mem[8] [0] <= _142_;
  always @(posedge clk)
      \mem[8] [1] <= _143_;
  always @(posedge clk)
      \mem[8] [2] <= _144_;
  always @(posedge clk)
      \mem[8] [3] <= _145_;
  always @(posedge clk)
      \mem[8] [4] <= _146_;
  always @(posedge clk)
      \mem[8] [5] <= _147_;
  always @(posedge clk)
      \mem[8] [6] <= _148_;
  always @(posedge clk)
      \mem[8] [7] <= _149_;
  always @(posedge clk)
      \mem[8] [8] <= _150_;
  always @(posedge clk)
      \mem[8] [9] <= _151_;
  always @(posedge clk)
      \mem[9] [0] <= _152_;
  always @(posedge clk)
      \mem[9] [1] <= _153_;
  always @(posedge clk)
      \mem[9] [2] <= _154_;
  always @(posedge clk)
      \mem[9] [3] <= _155_;
  always @(posedge clk)
      \mem[9] [4] <= _156_;
  always @(posedge clk)
      \mem[9] [5] <= _157_;
  always @(posedge clk)
      \mem[9] [6] <= _158_;
  always @(posedge clk)
      \mem[9] [7] <= _159_;
  always @(posedge clk)
      \mem[9] [8] <= _160_;
  always @(posedge clk)
      \mem[9] [9] <= _161_;
  always @(posedge clk)
      \mem[2] [0] <= _082_;
  always @(posedge clk)
      \mem[2] [1] <= _083_;
  always @(posedge clk)
      \mem[2] [2] <= _084_;
  always @(posedge clk)
      \mem[2] [3] <= _085_;
  always @(posedge clk)
      \mem[2] [4] <= _086_;
  always @(posedge clk)
      \mem[2] [5] <= _087_;
  always @(posedge clk)
      \mem[2] [6] <= _088_;
  always @(posedge clk)
      \mem[2] [7] <= _089_;
  always @(posedge clk)
      \mem[2] [8] <= _090_;
  always @(posedge clk)
      \mem[2] [9] <= _091_;
  always @(posedge clk)
      \mem[1] [0] <= _072_;
  always @(posedge clk)
      \mem[1] [1] <= _073_;
  always @(posedge clk)
      \mem[1] [2] <= _074_;
  always @(posedge clk)
      \mem[1] [3] <= _075_;
  always @(posedge clk)
      \mem[1] [4] <= _076_;
  always @(posedge clk)
      \mem[1] [5] <= _077_;
  always @(posedge clk)
      \mem[1] [6] <= _078_;
  always @(posedge clk)
      \mem[1] [7] <= _079_;
  always @(posedge clk)
      \mem[1] [8] <= _080_;
  always @(posedge clk)
      \mem[1] [9] <= _081_;
  always @(posedge clk)
      \mem[11] [0] <= _022_;
  always @(posedge clk)
      \mem[11] [1] <= _023_;
  always @(posedge clk)
      \mem[11] [2] <= _024_;
  always @(posedge clk)
      \mem[11] [3] <= _025_;
  always @(posedge clk)
      \mem[11] [4] <= _026_;
  always @(posedge clk)
      \mem[11] [5] <= _027_;
  always @(posedge clk)
      \mem[11] [6] <= _028_;
  always @(posedge clk)
      \mem[11] [7] <= _029_;
  always @(posedge clk)
      \mem[11] [8] <= _030_;
  always @(posedge clk)
      \mem[11] [9] <= _031_;
  always @(posedge clk)
      \mem[6] [0] <= _122_;
  always @(posedge clk)
      \mem[6] [1] <= _123_;
  always @(posedge clk)
      \mem[6] [2] <= _124_;
  always @(posedge clk)
      \mem[6] [3] <= _125_;
  always @(posedge clk)
      \mem[6] [4] <= _126_;
  always @(posedge clk)
      \mem[6] [5] <= _127_;
  always @(posedge clk)
      \mem[6] [6] <= _128_;
  always @(posedge clk)
      \mem[6] [7] <= _129_;
  always @(posedge clk)
      \mem[6] [8] <= _130_;
  always @(posedge clk)
      \mem[6] [9] <= _131_;
  always @(posedge clk)
      \mem[3] [0] <= _092_;
  always @(posedge clk)
      \mem[3] [1] <= _093_;
  always @(posedge clk)
      \mem[3] [2] <= _094_;
  always @(posedge clk)
      \mem[3] [3] <= _095_;
  always @(posedge clk)
      \mem[3] [4] <= _096_;
  always @(posedge clk)
      \mem[3] [5] <= _097_;
  always @(posedge clk)
      \mem[3] [6] <= _098_;
  always @(posedge clk)
      \mem[3] [7] <= _099_;
  always @(posedge clk)
      \mem[3] [8] <= _100_;
  always @(posedge clk)
      \mem[3] [9] <= _101_;
  always @(posedge clk)
      \mem[14] [0] <= _052_;
  always @(posedge clk)
      \mem[14] [1] <= _053_;
  always @(posedge clk)
      \mem[14] [2] <= _054_;
  always @(posedge clk)
      \mem[14] [3] <= _055_;
  always @(posedge clk)
      \mem[14] [4] <= _056_;
  always @(posedge clk)
      \mem[14] [5] <= _057_;
  always @(posedge clk)
      \mem[14] [6] <= _058_;
  always @(posedge clk)
      \mem[14] [7] <= _059_;
  always @(posedge clk)
      \mem[14] [8] <= _060_;
  always @(posedge clk)
      \mem[14] [9] <= _061_;
  always @(posedge clk)
      \mem[7] [0] <= _132_;
  always @(posedge clk)
      \mem[7] [1] <= _133_;
  always @(posedge clk)
      \mem[7] [2] <= _134_;
  always @(posedge clk)
      \mem[7] [3] <= _135_;
  always @(posedge clk)
      \mem[7] [4] <= _136_;
  always @(posedge clk)
      \mem[7] [5] <= _137_;
  always @(posedge clk)
      \mem[7] [6] <= _138_;
  always @(posedge clk)
      \mem[7] [7] <= _139_;
  always @(posedge clk)
      \mem[7] [8] <= _140_;
  always @(posedge clk)
      \mem[7] [9] <= _141_;
  always @(posedge clk)
      \mem[15] [0] <= _062_;
  always @(posedge clk)
      \mem[15] [1] <= _063_;
  always @(posedge clk)
      \mem[15] [2] <= _064_;
  always @(posedge clk)
      \mem[15] [3] <= _065_;
  always @(posedge clk)
      \mem[15] [4] <= _066_;
  always @(posedge clk)
      \mem[15] [5] <= _067_;
  always @(posedge clk)
      \mem[15] [6] <= _068_;
  always @(posedge clk)
      \mem[15] [7] <= _069_;
  always @(posedge clk)
      \mem[15] [8] <= _070_;
  always @(posedge clk)
      \mem[15] [9] <= _071_;
  always @(posedge clk)
      \mem[0] [0] <= _002_;
  always @(posedge clk)
      \mem[0] [1] <= _003_;
  always @(posedge clk)
      \mem[0] [2] <= _004_;
  always @(posedge clk)
      \mem[0] [3] <= _005_;
  always @(posedge clk)
      \mem[0] [4] <= _006_;
  always @(posedge clk)
      \mem[0] [5] <= _007_;
  always @(posedge clk)
      \mem[0] [6] <= _008_;
  always @(posedge clk)
      \mem[0] [7] <= _009_;
  always @(posedge clk)
      \mem[0] [8] <= _010_;
  always @(posedge clk)
      \mem[0] [9] <= _011_;
  always @(posedge clk)
      \mem[12] [0] <= _032_;
  always @(posedge clk)
      \mem[12] [1] <= _033_;
  always @(posedge clk)
      \mem[12] [2] <= _034_;
  always @(posedge clk)
      \mem[12] [3] <= _035_;
  always @(posedge clk)
      \mem[12] [4] <= _036_;
  always @(posedge clk)
      \mem[12] [5] <= _037_;
  always @(posedge clk)
      \mem[12] [6] <= _038_;
  always @(posedge clk)
      \mem[12] [7] <= _039_;
  always @(posedge clk)
      \mem[12] [8] <= _040_;
  always @(posedge clk)
      \mem[12] [9] <= _041_;
  always @(posedge clk)
      \mem[10] [0] <= _012_;
  always @(posedge clk)
      \mem[10] [1] <= _013_;
  always @(posedge clk)
      \mem[10] [2] <= _014_;
  always @(posedge clk)
      \mem[10] [3] <= _015_;
  always @(posedge clk)
      \mem[10] [4] <= _016_;
  always @(posedge clk)
      \mem[10] [5] <= _017_;
  always @(posedge clk)
      \mem[10] [6] <= _018_;
  always @(posedge clk)
      \mem[10] [7] <= _019_;
  always @(posedge clk)
      \mem[10] [8] <= _020_;
  always @(posedge clk)
      \mem[10] [9] <= _021_;
  (* src = "fifo.v:7" *)
  always @(posedge clk)
      head[0] <= _000_[0];
  (* src = "fifo.v:7" *)
  always @(posedge clk)
      head[1] <= _000_[1];
  (* src = "fifo.v:7" *)
  always @(posedge clk)
      head[2] <= _000_[2];
  (* src = "fifo.v:7" *)
  always @(posedge clk)
      head[3] <= _000_[3];
  (* module_not_derived = 32'd1 *)
  (* src = "fifo.v:5" *)
  fsel fsel (
    .empty(empty),
    .in({ _171_, _170_, _169_, _168_, _167_, _166_, _165_, _164_, _163_, _162_ }),
    .out(out)
  );
endmodule

(* src = "fifo.v:31" *)
module fsel(in, empty, out);
  (* src = "fifo.v:31" *)
  input empty;
  (* src = "fifo.v:31" *)
  input [9:0] in;
  (* src = "fifo.v:31" *)
  output [9:0] out;
  assign out[0] = in[0] & ~(empty);
  assign out[1] = in[1] & ~(empty);
  assign out[2] = in[2] & ~(empty);
  assign out[3] = in[3] & ~(empty);
  assign out[4] = in[4] & ~(empty);
  assign out[5] = in[5] & ~(empty);
  assign out[6] = in[6] & ~(empty);
  assign out[7] = in[7] & ~(empty);
  assign out[8] = in[8] & ~(empty);
  assign out[9] = in[9] & ~(empty);
endmodule

(* src = "ib.v:2" *)
module ib(pkti, out, req, ack, full, clk, rst);
  (* src = "ib.v:2" *)
  input ack;
  (* src = "ib.v:3" *)
  input clk;
  (* src = "ib.v:7" *)
  wire empty;
  (* src = "ib.v:3" *)
  output full;
  (* src = "ib.v:2" *)
  output [9:0] out;
  (* src = "ib.v:2" *)
  input [9:0] pkti;
  (* src = "ib.v:5" *)
  wire [9:0] pkto;
  (* src = "ib.v:7" *)
  wire re;
  (* src = "ib.v:2" *)
  output [3:0] req;
  (* src = "ib.v:4" *)
  wire [3:0] reqi;
  (* src = "ib.v:3" *)
  input rst;
  (* src = "ib.v:6" *)
  wire we;
  (* module_not_derived = 32'd1 *)
  (* src = "ib.v:7" *)
  fifo fifo (
    .clk(clk),
    .empty(empty),
    .full(full),
    .in(pkti),
    .out(pkto),
    .re(re),
    .rst(rst),
    .we(we)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "ib.v:11" *)
  ibout ibout (
    .in(pkto),
    .out(out),
    .re(re)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "ib.v:8" *)
  ibsm ibsm (
    .ack(ack),
    .clk(clk),
    .empty(empty),
    .flowb(pkto[9:8]),
    .re(re),
    .req(req),
    .reqi(reqi),
    .rst(rst)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "ib.v:10" *)
  mkreq mkreq (
    .pkto(pkto),
    .reqi(reqi)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "ib.v:6" *)
  mkwe mkwe (
    .pkti(pkti),
    .we(we)
  );
endmodule

(* src = "ibout.v:1" *)
module ibout(in, out, re);
  (* src = "ibout.v:1" *)
  input [9:0] in;
  (* src = "ibout.v:1" *)
  output [9:0] out;
  (* src = "ibout.v:1" *)
  input re;
  assign out[0] = re & in[0];
  assign out[1] = in[1] & re;
  assign out[2] = in[2] & re;
  assign out[3] = in[3] & re;
  assign out[4] = in[4] & re;
  assign out[5] = in[5] & re;
  assign out[6] = in[6] & re;
  assign out[7] = in[7] & re;
  assign out[8] = in[8] & re;
  assign out[9] = in[9] & re;
endmodule

(* src = "ibsm.v:2" *)
module ibsm(flowb, re, empty, reqi, req, ack, clk, rst);
  (* src = "ibsm.v:6" *)
  wire _0_;
  (* src = "ibsm.v:3" *)
  input ack;
  (* src = "ibsm.v:3" *)
  input clk;
  (* src = "ibsm.v:2" *)
  input empty;
  (* src = "ibsm.v:2" *)
  input [1:0] flowb;
  (* src = "ibsm.v:2" *)
  output re;
  reg re;
  (* src = "ibsm.v:3" *)
  output [3:0] req;
  (* src = "ibsm.v:3" *)
  input [3:0] reqi;
  (* src = "ibsm.v:3" *)
  input rst;
  assign _0_ = ack & ~(rst);
  (* src = "ibsm.v:6" *)
  always @(posedge clk)
      re <= _0_;
  assign req = 4'h0;
endmodule

(* src = "mkreq.v:2" *)
module mkreq(pkto, reqi);
  (* src = "mkreq.v:2" *)
  input [9:0] pkto;
  (* src = "mkreq.v:2" *)
  output [3:0] reqi;
  assign reqi[0] = ~(pkto[1] | pkto[0]);
  assign reqi[1] = pkto[0] & ~(pkto[1]);
  assign reqi[2] = pkto[1] & ~(pkto[0]);
  assign reqi[3] = pkto[1] & pkto[0];
endmodule

(* src = "mkwe.v:2" *)
module mkwe(pkti, we);
  (* src = "mkwe.v:2" *)
  input [9:0] pkti;
  (* src = "mkwe.v:2" *)
  output we;
  assign we = pkti[9] | pkti[8];
endmodule

(* top =  1  *)
(* src = "sw.v:2" *)
module sw(i0, i1, i2, i3, o0, o1, o2, o3, clk, rst);
  (* src = "sw.v:5" *)
  wire ack0;
  (* src = "sw.v:9" *)
  wire ack00;
  (* src = "sw.v:10" *)
  wire ack01;
  (* src = "sw.v:11" *)
  wire ack02;
  (* src = "sw.v:12" *)
  wire ack03;
  (* src = "sw.v:6" *)
  wire ack1;
  (* src = "sw.v:9" *)
  wire ack10;
  (* src = "sw.v:10" *)
  wire ack11;
  (* src = "sw.v:11" *)
  wire ack12;
  (* src = "sw.v:12" *)
  wire ack13;
  (* src = "sw.v:7" *)
  wire ack2;
  (* src = "sw.v:9" *)
  wire ack20;
  (* src = "sw.v:10" *)
  wire ack21;
  (* src = "sw.v:11" *)
  wire ack22;
  (* src = "sw.v:12" *)
  wire ack23;
  (* src = "sw.v:8" *)
  wire ack3;
  (* src = "sw.v:9" *)
  wire ack30;
  (* src = "sw.v:10" *)
  wire ack31;
  (* src = "sw.v:11" *)
  wire ack32;
  (* src = "sw.v:12" *)
  wire ack33;
  (* src = "sw.v:2" *)
  input clk;
  (* src = "sw.v:3" *)
  wire [9:0] co0;
  (* src = "sw.v:3" *)
  wire [9:0] co1;
  (* src = "sw.v:3" *)
  wire [9:0] co2;
  (* src = "sw.v:3" *)
  wire [9:0] co3;
  (* src = "sw.v:5" *)
  (* unused_bits = "0" *)
  wire full0;
  (* src = "sw.v:6" *)
  (* unused_bits = "0" *)
  wire full1;
  (* src = "sw.v:7" *)
  (* unused_bits = "0" *)
  wire full2;
  (* src = "sw.v:8" *)
  (* unused_bits = "0" *)
  wire full3;
  (* src = "sw.v:2" *)
  input [9:0] i0;
  (* src = "sw.v:2" *)
  input [9:0] i1;
  (* src = "sw.v:2" *)
  input [9:0] i2;
  (* src = "sw.v:2" *)
  input [9:0] i3;
  (* src = "sw.v:2" *)
  output [9:0] o0;
  (* src = "sw.v:2" *)
  output [9:0] o1;
  (* src = "sw.v:2" *)
  output [9:0] o2;
  (* src = "sw.v:2" *)
  output [9:0] o3;
  (* src = "sw.v:4" *)
  wire [3:0] req0;
  (* src = "sw.v:4" *)
  wire [3:0] req1;
  (* src = "sw.v:4" *)
  wire [3:0] req2;
  (* src = "sw.v:4" *)
  wire [3:0] req3;
  (* src = "sw.v:2" *)
  input rst;
  (* module_not_derived = 32'd1 *)
  (* src = "sw.v:9" *)
  ackor ackor0 (
    .ack(ack0),
    .ack0n(ack00),
    .ack1n(ack10),
    .ack2n(ack20),
    .ack3n(ack30)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "sw.v:10" *)
  ackor ackor1 (
    .ack(ack1),
    .ack0n(ack01),
    .ack1n(ack11),
    .ack2n(ack21),
    .ack3n(ack31)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "sw.v:11" *)
  ackor ackor2 (
    .ack(ack2),
    .ack0n(ack02),
    .ack1n(ack12),
    .ack2n(ack22),
    .ack3n(ack32)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "sw.v:12" *)
  ackor ackor3 (
    .ack(ack3),
    .ack0n(ack03),
    .ack1n(ack13),
    .ack2n(ack23),
    .ack3n(ack33)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "sw.v:13" *)
  arb arb0 (
    .ack0(ack00),
    .ack1(ack01),
    .ack2(ack02),
    .ack3(ack03),
    .clk(clk),
    .req0(req0[0]),
    .req1(req1[0]),
    .req2(req2[0]),
    .req3(req3[0]),
    .rst(rst)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "sw.v:14" *)
  arb arb1 (
    .ack0(ack10),
    .ack1(ack11),
    .ack2(ack12),
    .ack3(ack13),
    .clk(clk),
    .req0(req0[1]),
    .req1(req1[1]),
    .req2(req2[1]),
    .req3(req3[1]),
    .rst(rst)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "sw.v:15" *)
  arb arb2 (
    .ack0(ack20),
    .ack1(ack21),
    .ack2(ack22),
    .ack3(ack23),
    .clk(clk),
    .req0(req0[2]),
    .req1(req1[2]),
    .req2(req2[2]),
    .req3(req3[2]),
    .rst(rst)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "sw.v:16" *)
  arb arb3 (
    .ack0(ack30),
    .ack1(ack31),
    .ack2(ack32),
    .ack3(ack33),
    .clk(clk),
    .req0(req0[3]),
    .req1(req1[3]),
    .req2(req2[3]),
    .req3(req3[3]),
    .rst(rst)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "sw.v:17" *)
  cb cb (
    .ack0({ ack03, ack02, ack01, ack00 }),
    .ack1({ ack13, ack12, ack11, ack10 }),
    .ack2({ ack23, ack22, ack21, ack20 }),
    .ack3({ ack33, ack32, ack31, ack30 }),
    .co0(co0),
    .co1(co1),
    .co2(co2),
    .co3(co3),
    .o0(o0),
    .o1(o1),
    .o2(o2),
    .o3(o3)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "sw.v:5" *)
  ib ib0 (
    .ack(ack0),
    .clk(clk),
    .full(full0),
    .out(co0),
    .pkti(i0),
    .req(req0),
    .rst(rst)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "sw.v:6" *)
  ib ib1 (
    .ack(ack1),
    .clk(clk),
    .full(full1),
    .out(co1),
    .pkti(i1),
    .req(req1),
    .rst(rst)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "sw.v:7" *)
  ib ib2 (
    .ack(ack2),
    .clk(clk),
    .full(full2),
    .out(co2),
    .pkti(i2),
    .req(req2),
    .rst(rst)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "sw.v:8" *)
  ib ib3 (
    .ack(ack3),
    .clk(clk),
    .full(full3),
    .out(co3),
    .pkti(i3),
    .req(req3),
    .rst(rst)
  );
endmodule
